name: Build and Release

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Build ReflexEngine (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential lua5.4

      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install make lua

      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          install: mingw-w64-x86_64-gcc make lua

      - name: Build Project (Linux/macOS)
        if: runner.os != 'Windows'
        run: make

      - name: Build Project (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: make

      - name: Archive Build Artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p release
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            cp binout/reflex release/reflex-linux
            chmod +x release/reflex-linux
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            cp binout/reflex release/reflex-macos
            chmod +x release/reflex-macos
          fi
        shell: bash

      - name: Archive Build Artifacts (Windows)
        if: runner.os == 'Windows'
        run: copy binout\reflex.exe release\reflex-windows.exe
        shell: cmd

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: reflexengine-${{ runner.os }}
          path: release/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: reflexengine-linux
          path: release/

      - name: Download macOS Build
        uses: actions/download-artifact@v4
        with:
          name: reflexengine-macos
          path: release/

      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: reflexengine-windows
          path: release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
            tag_name: ${{ github.ref_name }}
            name: ReflexEngine ${{ github.ref_name }}
            body: |
              ðŸš€ **New Release:** ReflexEngine ${{ github.ref_name }}
              - âœ… **Linux**, **macOS**, and **Windows** builds!
              - ðŸ”¥ Automatic build from latest commit.
            draft: false
            prerelease: false
            files: |
              release/reflex-linux
              release/reflex-macos
              release/reflex-windows.exe
